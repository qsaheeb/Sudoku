{"version":3,"sources":["components/typer.js","sudokuService.js","components/Square.jsx","components/Board.jsx","storageService.js","components/footer.jsx","components/SudokuSolver.jsx","App.jsx","index.js"],"names":["Typer","state","text","isDeleting","loopNum","typingSpeed","handleType","dataText","props","fullText","length","setState","substring","setTimeout","this","heading","id","React","Component","EMPTY_GRID","Array","fill","map","EMPTY_START_GRID","solvingProcess","examples","Math","floor","random","grid","i","j","row","col","num","x","y","push","arr","slice","position","find","findEmpty","nums","isSafe","Number","solveRecursive","shift","Square","value","disabled","style","onChange","iniGrid","pos","FormControl","className","type","e","maxLength","sudokuService","background","autoComplete","Board","startGrid","solved","squares","index","color","backgroundColor","key","renderSquares","KEY","board","localStorage","setItem","JSON","stringify","parse","getItem","Footer","marginTop","Row","Col","textAlign","textDecoration","href","SudokuSolver","useState","setGrid","setStartGrid","isGridDisabled","setIsGridDisabled","isShowProcessChecked","setIsShowProcessChecked","isSolved","setIsSolved","isSolving","setIsSolving","progressSpeed","setProgressSpeed","setIniGrid","useEffect","storageBoard","storageService","getBoard","showProgress","progress","a","Promise","resolve","reset","setBoard","sm","target","split","newGrid","lg","Card","Body","Button","variant","onClick","randomGrid","getRandomExample","window","location","reload","solve","FormCheck","label","checked","changeEvent","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAqDeA,G,kNA/CbC,MAAQ,CACNC,KAAM,GACNC,YAAY,EACZC,QAAS,EACTC,YARiB,K,EAenBC,WAAa,WACX,IAAQC,EAAa,EAAKC,MAAlBD,SACR,EAAmD,EAAKN,MAAhDE,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAASF,EAA7B,EAA6BA,KAAMG,EAAnC,EAAmCA,YAE7BI,EAAWF,EADPH,EAAUG,EAASG,QAG7B,EAAKC,SAAS,CACZT,KAAMC,EACFM,EAASG,UAAU,EAAGV,EAAKQ,OAAS,GACpCD,EAASG,UAAU,EAAGV,EAAKQ,OAAS,GACxCL,YAAaF,EAxBI,GADF,MA4BZA,GAAcD,IAASO,EAEjBN,GAAuB,KAATD,GACvB,EAAKS,SAAS,CACZR,YAAY,EACZC,QAASA,EAAU,IAJrBS,YAAW,kBAAM,EAAKF,SAAS,CAAER,YAAY,MAAS,KAQxDU,WAAW,EAAKP,WAAYD,I,uDA1B9B,WACES,KAAKR,e,oBA4BP,WACE,OACE,4BACGQ,KAAKN,MAAMO,QADd,OAEE,8BAAOD,KAAKb,MAAMC,MAClB,0BAAMc,GAAG,gB,GA1CGC,IAAMC,Y,yHCLbC,EAAa,kBACxB,IAAIC,MAAM,GAAGC,KAAK,MAAMC,KAAI,kBAAM,IAAIF,MAAM,GAAGC,KAAK,OACzCE,EAAmB,kBAC9B,IAAIH,MAAM,GAAGC,KAAK,MAAMC,KAAI,kBAAM,IAAIF,MAAM,OAiH/B,M,iDA9GbI,eAAiB,G,oDAEjB,WACE,IAAMC,EAAW,CACf,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3B,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3B,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3B,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG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","file":"static/js/main.bd39912a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./typer.css\";\r\nconst TYPING_SPEED = 150;\r\nconst DELETING_SPEED = 30;\r\n\r\nclass Typer extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n    isDeleting: false,\r\n    loopNum: 0,\r\n    typingSpeed: TYPING_SPEED,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleType();\r\n  }\r\n\r\n  handleType = () => {\r\n    const { dataText } = this.props;\r\n    const { isDeleting, loopNum, text, typingSpeed } = this.state;\r\n    const i = loopNum % dataText.length;\r\n    const fullText = dataText[i];\r\n\r\n    this.setState({\r\n      text: isDeleting\r\n        ? fullText.substring(0, text.length - 1)\r\n        : fullText.substring(0, text.length + 1),\r\n      typingSpeed: isDeleting ? DELETING_SPEED : TYPING_SPEED,\r\n    });\r\n\r\n    if (!isDeleting && text === fullText) {\r\n      setTimeout(() => this.setState({ isDeleting: true }), 500);\r\n    } else if (isDeleting && text === \"\") {\r\n      this.setState({\r\n        isDeleting: false,\r\n        loopNum: loopNum + 1,\r\n      });\r\n    }\r\n\r\n    setTimeout(this.handleType, typingSpeed);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <h1>\r\n        {this.props.heading}&nbsp;\r\n        <span>{this.state.text}</span>\r\n        <span id=\"cursor\"></span>\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Typer;\r\n","export const EMPTY_GRID = () =>\r\n  new Array(9).fill(null).map(() => new Array(9).fill(0));\r\nexport const EMPTY_START_GRID = () =>\r\n  new Array(9).fill(null).map(() => new Array(9));\r\n\r\nclass SudokuService {\r\n  solvingProcess = [];\r\n\r\n  getRandomExample() {\r\n    const examples = [\r\n      [\r\n        [0, 0, 3, 0, 0, 0, 0, 0, 0],\r\n        [5, 8, 0, 2, 0, 0, 3, 0, 9],\r\n        [2, 0, 0, 4, 0, 5, 8, 7, 1],\r\n        [3, 7, 0, 0, 1, 0, 5, 9, 0],\r\n        [8, 0, 0, 7, 4, 0, 1, 3, 0],\r\n        [0, 2, 9, 0, 0, 8, 0, 0, 0],\r\n        [6, 0, 0, 1, 0, 3, 4, 0, 7],\r\n        [4, 0, 2, 0, 6, 0, 0, 0, 0],\r\n        [0, 0, 0, 5, 2, 4, 6, 8, 0],\r\n      ],\r\n      [\r\n        [4, 0, 0, 0, 5, 0, 0, 3, 2],\r\n        [0, 1, 0, 0, 9, 0, 7, 0, 5],\r\n        [7, 5, 3, 0, 0, 4, 1, 9, 6],\r\n        [0, 0, 1, 0, 7, 0, 0, 0, 0],\r\n        [6, 0, 9, 0, 0, 1, 2, 5, 0],\r\n        [0, 0, 0, 5, 0, 0, 6, 1, 3],\r\n        [3, 0, 4, 0, 0, 8, 0, 0, 1],\r\n        [0, 0, 0, 4, 0, 0, 0, 7, 8],\r\n        [0, 0, 0, 7, 6, 3, 0, 2, 9],\r\n      ],\r\n      [\r\n        [0, 0, 4, 2, 7, 6, 0, 3, 0],\r\n        [0, 5, 7, 1, 0, 0, 0, 4, 9],\r\n        [0, 0, 0, 9, 0, 0, 0, 0, 0],\r\n        [3, 0, 8, 5, 0, 0, 9, 6, 0],\r\n        [0, 0, 0, 0, 0, 7, 1, 8, 5],\r\n        [0, 0, 1, 0, 2, 0, 3, 0, 4],\r\n        [8, 0, 0, 7, 0, 1, 0, 9, 0],\r\n        [0, 0, 0, 6, 0, 0, 2, 1, 0],\r\n        [1, 0, 6, 0, 8, 0, 0, 0, 0],\r\n      ],\r\n      [\r\n        [5, 3, 0, 0, 7, 0, 0, 0, 0],\r\n        [6, 0, 0, 1, 9, 5, 0, 0, 0],\r\n        [0, 9, 8, 0, 0, 0, 0, 6, 0],\r\n        [8, 0, 0, 0, 6, 0, 0, 0, 3],\r\n        [4, 0, 0, 8, 0, 3, 0, 0, 1],\r\n        [7, 0, 0, 0, 2, 0, 0, 0, 6],\r\n        [0, 6, 0, 0, 0, 0, 2, 8, 0],\r\n        [0, 0, 0, 4, 1, 9, 0, 0, 5],\r\n        [0, 0, 0, 0, 8, 0, 0, 7, 9],\r\n      ],\r\n    ];\r\n    return examples[Math.floor(Math.random() * examples.length)];\r\n  }\r\n\r\n  findEmpty(grid) {\r\n    for (let i = 0; i < grid.length; i++) {\r\n      for (let j = 0; j < grid[i].length; j++) {\r\n        if (grid[i][j] === 0) return { i, j };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isSafe(grid, row, col, num) {\r\n    for (let i = 0; i < grid.length; i++) {\r\n      if (grid[i][col] === num && i !== row) return false;\r\n      if (grid[row][i] === num && i !== col) return false;\r\n    }\r\n\r\n    const x = Math.floor(row / 3) * 3;\r\n    const y = Math.floor(col / 3) * 3;\r\n\r\n    for (let i = x; i < x + 3; i++) {\r\n      for (let j = y; j < y + 3; j++) {\r\n        if (grid[i][j] === num && i !== row && j !== col) return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  solveRecursive(grid) {\r\n    this.solvingProcess.push(grid.map((arr) => arr.slice()));\r\n    const find = this.findEmpty(grid);\r\n    let position;\r\n    const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n    if (find) {\r\n      position = find;\r\n    } else return true;\r\n\r\n    while (nums.length !== 0) {\r\n      const num = nums[0];\r\n\r\n      if (this.isSafe(grid, position.i, position.j, num)) {\r\n        grid[position.i][position.j] = Number(num);\r\n        if (this.solveRecursive(grid)) return true;\r\n        grid[position.i][position.j] = 0;\r\n      }\r\n      nums.shift();\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  solve(grid) {\r\n    this.solvingProcess = [];\r\n    this.solveRecursive(grid);\r\n    return this.solvingProcess;\r\n  }\r\n}\r\n\r\nexport default new SudokuService();\r\n","import React from \"react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport sudokuService from \"../sudokuService\";\r\n\r\nfunction Square({ id, value, disabled, style, onChange, iniGrid, grid }) {\r\n  const pos = {\r\n    i: Number(id[0]),\r\n    j: Number(id[2]),\r\n  };\r\n  return (\r\n    <FormControl\r\n      className=\"square\"\r\n      id={id}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={(e) => onChange(e, id)}\r\n      disabled={disabled}\r\n      maxLength=\"1\"\r\n      style={\r\n        iniGrid[pos.i][pos.j] === 0 && grid[pos.i][pos.j] !== 0\r\n          ? sudokuService.isSafe(grid, pos.i, pos.j, value)\r\n            ? { background: \"#74c69d\" }\r\n            : { background: \"#da5552\" }\r\n          : style\r\n      }\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n}\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nfunction Board({ startGrid, grid, onChange, disabled, solved, iniGrid }) {\r\n  const renderSquares = () => {\r\n    const squares = [];\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        const index = `${i},${j}`;\r\n        squares.push(\r\n          <Square\r\n            style={\r\n              startGrid[i][j] === 0\r\n                ? { color: \"green\", backgroundColor: \"#74c69d\" }\r\n                : { color: \"black\", backgroundColor: \"#8ecae6\" }\r\n            }\r\n            key={index}\r\n            id={index}\r\n            onChange={onChange}\r\n            value={grid[i][j] === 0 ? \"\" : grid[i][j]}\r\n            disabled={disabled || iniGrid[i][j] !== 0}\r\n            grid={grid}\r\n            iniGrid={iniGrid}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return squares;\r\n  };\r\n\r\n  return <div className=\"sudoku-grid shadow\">{renderSquares()}</div>;\r\n}\r\n\r\nexport default Board;\r\n","const KEY = \"sudoku-board\";\r\n\r\nclass StorageService {\r\n  setBoard(board) {\r\n    localStorage.setItem(KEY, JSON.stringify(board));\r\n  }\r\n\r\n  getBoard() {\r\n    return JSON.parse(localStorage.getItem(KEY));\r\n  }\r\n}\r\n\r\nexport default new StorageService();\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nconst Footer = () => (\r\n  <footer\r\n    className=\"page-footer font-small blue pt-4\"\r\n    style={{ marginTop: 80 }}\r\n  >\r\n    <Row className=\"mt-4\" >\r\n      <Col className=\"mb-5\">\r\n        <div><h5>SUDOKU</h5>\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Open source on <a style={{ textDecoration: \"none\" }} href=\"https://github.com/qsaheeb/Sudoku.git\">GitHub</a>\r\n          </p>\r\n        </div>\r\n      </Col>\r\n      <Col>\r\n        <h5 className=\"text-uppercase\">Contact</h5>\r\n        <ul className=\"list-unstyled\">\r\n          <li>\r\n            <a href=\"www.linkedin.com/in/qsaheeb93\"><i className=\"fab fa-linkedin-in\"></i></a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://twitter.com/undolt93\"><i className=\"fab fa-twitter\"></i></a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.facebook.com/qazi.saheeb.908/\"><i className=\"fab fa-facebook-square\"></i></a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/qsaheeb\"><i className=\"fab fa-github\"></i></a>\r\n          </li>\r\n        </ul>\r\n      </Col>\r\n    </Row>\r\n\r\n    <div className=\"footer-copyright text-center py-3\">\r\n      © 2021/Sudoku\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormCheck,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\nimport Board from \"./Board\";\r\nimport sudokuService, { EMPTY_GRID, EMPTY_START_GRID } from \"../sudokuService\";\r\nimport storageService from \"../storageService\";\r\nimport Footer from \"./footer\";\r\n\r\nexport default function SudokuSolver() {\r\n  const [grid, setGrid] = useState(EMPTY_GRID);\r\n  const [startGrid, setStartGrid] = useState(EMPTY_START_GRID);\r\n  const [isGridDisabled, setIsGridDisabled] = useState(false);\r\n  const [isShowProcessChecked, setIsShowProcessChecked] = useState(true);\r\n  const [isSolved, setIsSolved] = useState(false);\r\n  const [isSolving, setIsSolving] = useState(false);\r\n  const [progressSpeed, setProgressSpeed] = useState(100);\r\n  const [iniGrid, setIniGrid] = useState(EMPTY_GRID);\r\n\r\n  useEffect(() => {\r\n    const storageBoard = storageService.getBoard();\r\n    if (storageBoard) {\r\n      setGrid(storageBoard);\r\n      setIniGrid(storageBoard);\r\n    }\r\n  }, []);\r\n  const handleValueChange = (e, id) => {\r\n    const { value } = e.target;\r\n    if ((value <= 9 && value > 0) || value === \"\") {\r\n      const position = id.split(\",\");\r\n      const newGrid = grid.map((arr) => arr.slice());\r\n      if (value === \"\") newGrid[position[0]][position[1]] = 0;\r\n      else newGrid[position[0]][position[1]] = Number(value);\r\n      setGrid(newGrid);\r\n      storageService.setBoard(newGrid);\r\n    }\r\n  };\r\n\r\n  const showProgress = async (progress) => {\r\n    setIsGridDisabled(true);\r\n    for (const grid of progress) {\r\n      setGrid(grid);\r\n      await new Promise((resolve) =>\r\n        setTimeout(resolve, 1000 - 10 * progressSpeed)\r\n      );\r\n    }\r\n    setIsSolved(true);\r\n    setIsSolving(false);\r\n  };\r\n\r\n  const handleSolveButtonClicked = () => {\r\n    setIsSolving(true);\r\n    setIsSolved(false);\r\n    setStartGrid(iniGrid.map((arr) => arr.slice()));\r\n    const progress = sudokuService.solve(iniGrid);\r\n    if (isShowProcessChecked) {\r\n      showProgress(progress);\r\n    } else {\r\n      setIsGridDisabled(true);\r\n      setGrid(progress[progress.length - 1]);\r\n      setIsSolved(true);\r\n      setIsSolving(false);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setGrid(EMPTY_GRID);\r\n    setStartGrid(EMPTY_START_GRID);\r\n    setIsGridDisabled(false);\r\n    setIsSolved(false);\r\n    storageService.setBoard(EMPTY_GRID());\r\n  };\r\n\r\n  const undo = () => {\r\n    setIsGridDisabled(false);\r\n    setGrid(startGrid);\r\n    setStartGrid(EMPTY_START_GRID);\r\n    setIsSolved(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"mt-4\">\r\n        <Col sm={8} className=\"mb-5\">\r\n          <Board\r\n            startGrid={startGrid}\r\n            grid={grid}\r\n            onChange={handleValueChange}\r\n            disabled={isGridDisabled}\r\n            solved={isSolved}\r\n            iniGrid={iniGrid}\r\n          />\r\n        </Col>\r\n        <Col lg className=\"mb-5\">\r\n          <Card className=\"shadow\">\r\n            <Card.Body>\r\n              <Button\r\n                variant=\"primary\"\r\n                disabled={isSolving}\r\n                onClick={() => {\r\n                  reset();\r\n                  const randomGrid = sudokuService.getRandomExample();\r\n                  setGrid(randomGrid);\r\n                  setIniGrid(randomGrid);\r\n                  storageService.setBoard(randomGrid);\r\n                }}\r\n              >\r\n                New Grid\r\n              </Button>\r\n              {isSolving ? (\r\n                <Button\r\n                  className=\"btn\"\r\n                  variant=\"danger\"\r\n                  onClick={() => window.location.reload()}\r\n                >\r\n                  Stop\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  className=\"btn\"\r\n                  variant=\"success\"\r\n                  onClick={handleSolveButtonClicked}\r\n                >\r\n                  Auto Solve\r\n                </Button>\r\n              )}\r\n              <br />\r\n              <FormCheck\r\n                className=\"mt-3\"\r\n                type=\"checkbox\"\r\n                label=\"Show Backtracking process\"\r\n                disabled={isSolving}\r\n                checked={isShowProcessChecked}\r\n                onChange={(e) => setIsShowProcessChecked(e.target.checked)}\r\n              />\r\n              {isShowProcessChecked ? (\r\n                <div>\r\n                  <br />\r\n                  <p className=\"backtrack\">Set Backtracking Speed</p>\r\n                  <RangeSlider\r\n                    value={progressSpeed}\r\n                    onChange={(changeEvent) =>\r\n                      setProgressSpeed(changeEvent.target.value)\r\n                    }\r\n                    variant=\"danger\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <Button\r\n                className=\"mt-3 mr-1\"\r\n                variant=\"primary\"\r\n                disabled={isSolving}\r\n                onClick={reset}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Button\r\n                className=\"mt-3 ml-1\"\r\n                variant=\"primary\"\r\n                disabled={!isSolved}\r\n                onClick={undo}\r\n              >\r\n                <i className=\"fas fa-undo\" />\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <article>\r\n        <h1>About Sudoku</h1>\r\n        <p>\r\n          Sudoku is a fun puzzle game once you get the hang of it. At the same\r\n          time, learning to play Sudoku can be a bit intimidating for beginners.\r\n          So, if you are a complete beginner, here are a few Sudoku tips that\r\n          you can use to improve your Sudoku skills.\r\n          <br /> <b>Tip 1:</b> Look for rows, columns of 3×3 sections that\r\n          contain 5 or more numbers. Work through the remaining empty cells,\r\n          trying the numbers that have not been used. In many cases, you will\r\n          find numbers that can only be placed in one position considering the\r\n          other numbers that are already in its row, column, and 3×3 grid.{\" \"}\r\n          <br />\r\n          <b>Tip 2:</b> Break the grid up visually into 3 columns and 3 rows.\r\n          Each large column will have 3, 3×3 grids and each row will have 3, 3×3\r\n          grids. Now, look for columns or grids that have 2 of the same number.\r\n          Logically, there must be a 3rd copy of the same number in the only\r\n          remaining 9-cell section. Look at each of the remaining 9 positions\r\n          and see if you can find the location of the missing number.\r\n        </p>\r\n      </article>\r\n      <article>\r\n        <h1>How to play Sudoku</h1>\r\n        <p>\r\n          The goal of Sudoku is to fill in a 9×9 grid with digits so that each\r\n          column, row, and 3×3 section contain the numbers between 1 to 9. At\r\n          the beginning of the game, the 9×9 grid will have some of the squares\r\n          filled in. Your job is to use logic to fill in the missing digits and\r\n          complete the grid. Don’t forget, a move is incorrect if:\r\n          <br />\r\n          Any row contains more than one of the same number from 1 to 9\r\n          <br />\r\n          Any column contains more than one of the same number from 1 to 9\r\n          <br />\r\n          Any 3×3 grid contains more than one of the same number from 1 to 9\r\n        </p>\r\n      </article>\r\n      <article>\r\n        <h1>Sudoku Tips</h1>\r\n        <p>\r\n          Sudoku is a fun puzzle game once you get the hang of it. At the same\r\n          time, learning to play Sudoku can be a bit intimidating for beginners.\r\n          So, if you are a complete beginner, here are a few Sudoku tips that\r\n          you can use to improve your Sudoku skills.\r\n          <br />\r\n          <b>Tip 1:</b> Look for rows, columns of 3×3 sections that contain 5 or\r\n          more numbers. Work through the remaining empty cells, trying the\r\n          numbers that have not been used. In many cases, you will find numbers\r\n          that can only be placed in one position considering the other numbers\r\n          that are already in its row, column, and 3×3 grid.\r\n          <br />\r\n          <b>Tip 2:</b> Break the grid up visually into 3 columns and 3 rows.\r\n          Each large column will have 3, 3×3 grids and each row will have 3, 3×3\r\n          grids. Now, look for columns or grids that have 2 of the same number.\r\n          Logically, there must be a 3rd copy of the same number in the only\r\n          remaining 9-cell section. Look at each of the remaining 9 positions\r\n          and see if you can find the location of the missing number.\r\n        </p>\r\n      </article>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typer from \"./components/typer\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport SudokuSolver from \"./components/SudokuSolver\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Typer\r\n        className=\"typerr\"\r\n        heading=\"Sudoku\"\r\n        dataText={[\"Solver!\", \"Game!\", \"Challenge!\", \"Backtracking!\"]}\r\n      ></Typer>\r\n      <hr />\r\n      <SudokuSolver />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}